.MODEL SMALL       

PRINT MACRO M
	LEA DX,M
	MOV AH,09H
	INT 21H
ENDM

.DATA

        FILE1 DB 20 DUP(0)       ;STORES NAME OF FILE1(SOURCE)
        FILE2 DB 20 DUP(0)       ;STORES NAME OF FILE2(DESTINATION)
	FHANDLE1 DW ?            ;STORES HANDLE OF FILE1
	FHANDLE2 DW ?            ;STORES HANDLE OF FILE2  
	COUNT DW ?               
        BUFF DB 100H DUP('0')    ;BUFFER FOR STORING DATA TEMPORARILY

	NAMESREAD DB 10,13, "FILE NAMES READ$"
	FILEOPEN DB 10,13, "FILE OPENED SUCCESSFULLY$"
	FILECLOSE DB 10,13, "FILE CLOSED$"
	FILECOPY DB 10,13, "FILE COPIED SUCCESSFULLY$"

	FILECREATED DB 10,13, "FILE CREATED SUCCESSFULLY$"

	FILEOPENERROR DB 10,13, "COULD NOT OPEN FILE$"
	FILECLOSEERROR DB 10,13, "COULD NOT CLOSE FILE$"
	FILEREADERROR DB 10,13, "COULD NOT READ FILE$"
	FILECREATEERROR DB 10,13, "COULD NOT CREATE FILE$"

.CODE

START:
       	MOV AX,@DATA
	MOV DS,AX
	   
;*******************READING FILE NAME (FILE1)***********************
	MOV SI,82H        
	LEA DI,FILE1 
	   
READ1:  MOV AL,ES:[SI]
        CMP AL," "       ; COMPARE WITH SPACE
	JE NEXT          ; UNLESS SPACE CHARACTER IS FOUND,CONTINUE SAVING CHARACTERS 
	MOV [DI],AL      ; TO FILE1
	INC DI
	INC SI
	
	JMP READ1       ;CONTINUE UNTILL SPACE CHARACTER IS FOUND 
	   
NEXT:   INC SI          ;SKIP SPACE CHARACTER
        LEA DI,FILE2    
				
;***********************READING NAME OF SECOND FILE*********************************
		
READ2:  MOV AL,ES:[SI]
        CMP AL,0DH       ;JUMP ON ENTER 
        JE READCOMPLETE
        MOV [DI],AL
        INC DI
        INC SI

        JMP READ2

READCOMPLETE:                        
        PRINT NAMESREAD                       

;*****************OPENING FILE 1 FOR READING CONTENT********************

OPEN1:  MOV AH,3DH   ;INT 21 FUNCTION FOR OPENING FILE
        MOV AL,00    ;READ ONLY MODE
	LEA DX,FILE1 ; POINTER TO FILE1
	INT 21H
	
	JNC OPEN_SUCCESS  ;IF FILE OPENED SUCCESSFULLY,NO CARRY IS GENERATED.JMP ON SUCCESS
	
	PRINT FILEOPENERROR  ;PRINT ERROR MESSAGE AND EXIT THE PROGRAM
	JMP EXIT
	
OPEN_SUCCESS: 
	MOV FHANDLE1,AX    ;SAVE FILE HANDLE
      	PRINT FILEOPEN     ;PRINT SUCCESS MESSAGE
			  
;****************************CREATING FILE 2*******************************	  
	
        MOV AH,3CH              ;INT 21H FUNCTION FOR CREATING NEW FILE
	XOR CX,CX       
	LEA DX,FILE2
	INT 21H
	
        JNC CREATE_SUCCESS     ;IF FILE CREATED,NO CARRY IS GENERATED.JMP ON SUCCESS
	PRINT FILECREATEERROR  ;IF FILE NOT CREATED,PRINT ERROR MESSAGE AND EXIT
	JMP EXIT
     
CREATE_SUCCESS:  
	PRINT FILECREATED  
       
;*****************OPEN NEW FILE IN WRITE MODE**********************
	
	MOV AH,3DH    ;INT 21H FUNCTION FOR OPENING A FILE
	MOV AL,01H    ;WRITE ONLY MODE
	LEA DX,FILE2  ;DATA TO BE WRITTEN TO FILE2
	INT 21H

	JNC OPEN_SUCCESS2	   ;IF FILE OPENED,JMP TO LABEL MENTIONED

	PRINT FILEOPENERROR    ; EXIT ON ERROR
	JMP EXIT
	
	
OPEN_SUCCESS2: 
	MOV FHANDLE2,AX   ;SAVE THE FILE HANDLE
	PRINT FILEOPEN 
			               
;**************************READING DATA FROM FILE 1******************************
	
FREAD:  MOV AH,3FH       ;INT 21H FUNCTION FOR READING DATA FROM A FILE
        MOV BX,FHANDLE1  ;READ FROM FILE1
	MOV CX,100
	LEA DX,BUFF
	INT 21H
	
	JC READ_ERROR ; IF READ ERROR OCCURS,CARRY IS SET. JMP ON ERROR
	
	CMP AX,0000   ;IF END OF FILE REACHED
	JE CLOSE      ;WILL CLOSE BOTH FILES AND EXIT
		
;*********************NOW WRITE THE BYTES TO ANOTHER FILE**************************
	
	MOV COUNT,AX   ;NUMBER OF BYTES READ
		
	MOV AH,40H         ;INT 21H FUNCTION FOR WRITING TO A FILE
        MOV BX,FHANDLE2    ;WRITE IN FILE2
        MOV CX,COUNT       ;NUMBER OF BYTES TO WRITE
	LEA DX,BUFF        ;BUFFER FROM WHICH DATA IS WRITTEN TO FILE
	INT 21H
		
	JMP FREAD         ;CONTINUE READING AND WRITING UNTILL END OF FILE1 IS REACHED
			  
READ_ERROR:  
	PRINT FILEREADERROR   ;PRINT READ ERROR MESSAGE
        JMP EXIT     
		  
;**********************CLOSING THE FILES**************************************
		 
CLOSE:		
	MOV BX,FHANDLE1  
	MOV AH,3EH        ;INT 21H FUNCTION FOR CLOSING THE FILE
	INT 21H			                
	JC CLOSE_ERROR	;JUMP IF ERROR CLOSING THE FILE	 

	MOV BX,FHANDLE2   ;CLOSE FILE2 
	MOV AH,3EH        ;FUNCTION FOR CLOSING THE FILE
	INT 21H
	JC CLOSE_ERROR    
			  
	PRINT FILECLOSE
			   
	JMP EXIT        ;EXIT THE PROGRAM
		   
CLOSE_ERROR:  
	PRINT FILECLOSEERROR		
	JMP EXIT        ;EXIT THE PROGRAM
EXIT:		
        MOV AH,4CH      ;EXIT FROM THE PROGRAM
        INT 21H

        END START
END
               
